
name: e2e-olm 

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

on:
  push:
    # Publish semver tags as releases.
    tags: ["v*.*.*"]
  workflow_run:
    workflows: [bundle-publish]
    types:
      - completed

env:
  # Use docker.io for Docker Hub if empty
  REGISTRY: ghcr.io
  # github.repository as <account>/<repo>
  IMAGE_NAME: ${{ github.repository }}
  RELEASE: ${{ github.ref_name }}

jobs:
  e2e-tests:
    name: E2E tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Import environment variables from file
        run: cat ".github/env" >> $GITHUB_ENV
      - name: Install Go
        uses: actions/setup-go@v2
        with:
          go-version: "${{ env.golang-version }}"
      - name: Start minikube
        uses: medyagh/setup-minikube@master
      - name: Try the cluster !
        run: kubectl get pods -A
      - name: Install operator-sdk 
        id: operator-sdk 
        run: |
          export ARCH=$(case $(uname -m) in x86_64) echo -n amd64 ;; aarch64) echo -n arm64 ;; *) echo -n $(uname -m) ;; esac)
          export OS=$(uname | awk '{print tolower($0)}')
          export OPERATOR_SDK_DL_URL=https://github.com/operator-framework/operator-sdk/releases/download/v1.17.0
          curl -LO ${OPERATOR_SDK_DL_URL}/operator-sdk_${OS}_${ARCH}
          gpg --keyserver keyserver.ubuntu.com --recv-keys 052996E2A20B5C7E
          curl -LO ${OPERATOR_SDK_DL_URL}/checksums.txt
          curl -LO ${OPERATOR_SDK_DL_URL}/checksums.txt.asc
          gpg -u "Operator SDK (release) <cncf-operator-sdk@cncf.io>" --verify checksums.txt.asc
          grep operator-sdk_${OS}_${ARCH} checksums.txt | sha256sum -c -
          chmod +x operator-sdk_${OS}_${ARCH} && sudo mv operator-sdk_${OS}_${ARCH} /usr/local/bin/operator-sdk
      - name: Install olm and mondoo
        run: |
          operator-sdk olm install
          curl -sSL http://mondoo.io/download.sh | bash
          mv mondoo /usr/local/bin/ 
          echo ${{ secrets.MONDOO_CLIENT }} > creds.yaml
          kubectl create ns mondoo-operator-system
          kubectl create secret generic mondoo-client --namespace mondoo-operator-system --from-file=config=creds.yaml
      - name: Run e2e test with olm
        run: |
          operator-sdk run bundle '${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-bundle:${{ env.REGISTRY }}' --namespace mondoo-operator-system
          kubectl apply -f config/samples/k8s_v1alpha1_mondooauditconfig.yaml
          make test/deployment
          operator-sdk cleanup mondoo-operator --namespace mondoo-operator-system
          operator-sdk olm uninstall 