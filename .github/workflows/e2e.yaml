name: e2e
on:
  pull_request:
  push:
    branches:
      - "main"
    tags:
      - "v*"
jobs:
  e2e-tests:
    name: E2E tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Import environment variables from file
        run: cat ".github/env" >> $GITHUB_ENV
      - name: Install Go
        uses: actions/setup-go@v2
        with:
          go-version: "${{ env.golang-version }}"
      - name: Start minikube
        uses: medyagh/setup-minikube@master
      - name: Try the cluster !
        run: kubectl get pods -A
      - name: Build controller image
        run: |
          export SHELL=/bin/bash
          eval $(minikube -p minikube docker-env)
          make docker-build
          make bundle-build
      - name: get operator-sdk
        uses: shivanshs9/setup-k8s-operator-sdk@v1
        with:
          version: "1.15.0"
      - name: Build docker images
        run: |
          operator-sdk olm install
          operator-sdk run bundle
          echo ${{ secrets.MONDOO_CLIENT }} > creds.yaml
          kubectl create secret generic mondoo-client --namespace mondoo-operator-system --from-file=config=creds.yaml
          kubectl apply -f config/samples/k8s_v1alpha1_mondooclient.yaml
      # - name: Deploy to minikube with kubectl
      #   run: |
      #     make deploy
      #     echo ${{ secrets.MONDOO_CLIENT }} > creds.yaml
      #     kubectl create secret generic mondoo-client --namespace mondoo-operator-system --from-file=config=creds.yaml
      #     kubectl apply -f config/samples/k8s_v1alpha1_mondooclient.yaml
      - name: Verify a Kubernetes Application
        run: |
          sleep 20
          curl -sSL http://mondoo.io/download.sh | bash
          mv mondoo /usr/local/bin/ 
          make test/deployment

  # Added to summarize the matrix and allow easy branch protection rules setup
  e2e-tests-result:
    name: End-to-End Test Results
    if: always()
    needs:
      - e2e-tests
    runs-on: ubuntu-latest
    steps:
      - name: Mark the job as a success
        if: needs.e2e-tests.result == 'success'
        run: exit 0
      - name: Mark the job as a failure
        if: needs.e2e-tests.result != 'success'
        run: exit 1
