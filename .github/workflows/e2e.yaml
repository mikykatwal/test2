name: E2E Tests
on:
  pull_request:
  push:
    paths-ignore:
      - "docs/**"
    branches:
      - "main"
    tags: ["v*.*.*"]

jobs:
  e2e-tests:
    name: E2E tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Import environment variables from file
        run: cat ".github/env" >> $GITHUB_ENV
      - name: Install Go
        uses: actions/setup-go@v2
        with:
          go-version: "${{ env.golang-version }}"
      - name: Start minikube
        uses: medyagh/setup-minikube@master
        with:
          memory: 4000m
      - name: Try the cluster !
        run: |
          kubectl get pods -A
      - name: Build image
        run: |
          export SHELL=/bin/bash
          eval $(minikube -p minikube docker-env)
          make docker-build
      - name: Deploy to minikube
        run: |
          make deploy
          echo ${{ secrets.MONDOO_CLIENT }} | base64 -d > creds.json
          kubectl create secret generic mondoo-client --namespace mondoo-operator --from-file=config=creds.json
          rm creds.json
          kubectl apply -f config/samples/k8s_v1alpha1_mondooauditconfig.yaml
      - name: Verify Mondoo Operator kustomize manifests
        run: |
          echo "Wait for Operator"
          kubectl wait --for=condition=Ready pod -l control-plane=controller-manager --namespace mondoo-operator
          echo "display deployed pods"
          kubectl describe pods -n mondoo-operator
          echo "check mondoo status"
          kubectl exec -q daemonset/mondoo-client --namespace mondoo-operator -- mondoo status
          kubectl exec -q deployment/mondoo-client --namespace mondoo-operator -- mondoo status 
          echo "wait for mondoo clients to be ready"
          kubectl describe pods -n mondoo-operator 
          kubectl wait --for=condition=Ready pod -l mondoo_cr=mondoo-client --namespace mondoo-operator --timeout=400s
          kubectl exec -q daemonset/mondoo-client --namespace mondoo-operator -- mondoo status
          kubectl exec -q deployment/mondoo-client --namespace mondoo-operator -- mondoo status
          echo "display deployed pods"
          kubectl get pods -n mondoo-operator
          echo "Run Mondoo Tests"
          curl -sSL http://mondoo.io/download.sh | bash
          mv mondoo /usr/local/bin/ 
          make test/deployment
          # Next test runs out of CPU resources if we leave these Pods running, so clean up after ourselves as we exit this test
          kubectl delete -f config/samples/k8s_v1alpha1_mondooauditconfig.yaml --wait=true
      - name: Verify Mondoo Operator kustomize manifests in different namespace
        run: |
          kubectl create ns not-mondoo-operator
          echo ${{ secrets.MONDOO_CLIENT }} | base64 -d > creds.json
          kubectl create secret generic mondoo-client --namespace not-mondoo-operator --from-file=config=creds.json
          rm creds.json
          yq ".metadata.namespace= \"not-mondoo-operator\" | .metadata.name = \"mondoo-operator-nodes\"" config/rbac/service_account_nodes.yaml | kubectl apply -f -
          yq ".metadata.namespace= \"not-mondoo-operator\" | .metadata.name = \"mondoo-operator-workload\"" config/rbac/workload_service_account.yaml  | kubectl apply -f -
          kubectl get clusterrolebinding mondoo-operator-workload -o yaml | yq '(.subjects) = [ .subjects[] + {"kind": "ServiceAccount", "name": "mondoo-operator-workload", "namespace": "not-mondoo-operator"}]' | kubectl apply -f -
          yq '.metadata.namespace= "not-mondoo-operator" | .spec.workloads.serviceAccount = "mondoo-operator-workload"' config/samples/k8s_v1alpha1_mondooauditconfig.yaml | kubectl apply -f -
          echo "Waiting for Pods to start appearing"
          export ATTEMPTS=0
          export PODCOUNT=0
          until [ $PODCOUNT -gt 0 ] || [ $ATTEMPTS -eq 10 ] ; do ATTEMPTS=$(($ATTEMPTS + 1)); PODCOUNT=$(kubectl get pods -n not-mondoo-operator --selector mondoo_cr=mondoo-client -o yaml | yq '.items | length') ; echo "PODCOUNT: \"${PODCOUNT}\" ATTEMPTS: $ATTEMPTS" ; sleep 2 ; done
          if [[ $ATTEMPTS -eq 10 ]]; then echo "Waited for Pods that never appeared"; exit 1 ; fi
          kubectl get pods -n not-mondoo-operator -o yaml
          kubectl wait --for=condition=Ready pod -l mondoo_cr=mondoo-client --namespace not-mondoo-operator --timeout=400s
          kubectl get pods -n not-mondoo-operator
          make test/deployment-uncommon-ns
          yq '.metadata.namespace = "not-mondoo-operator"' config/samples/k8s_v1alpha1_mondooauditconfig.yaml | kubectl delete -f -
          kubectl delete namespace not-mondoo-operator
      - name: Undeploy from minikube
        run: |
          make undeploy

  # Added to summarize the matrix and allow easy branch protection rules setup
  e2e-tests-result:
    name: End-to-End Test Results
    if: always()
    needs:
      - e2e-tests
    runs-on: ubuntu-latest
    steps:
      - name: Mark the job as a success
        if: needs.e2e-tests.result == 'success'
        run: exit 0
      - name: Mark the job as a failure
        if: needs.e2e-tests.result != 'success'
        run: exit 1
