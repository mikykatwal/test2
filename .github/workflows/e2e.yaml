name: e2e
on:
  pull_request:
  push:
    branches:
      - "main"
      - "improve-olm-bundle-relase"
    tags: ["v*.*.*"]
jobs:
  e2e-tests:
    name: E2E tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Import environment variables from file
        run: cat ".github/env" >> $GITHUB_ENV
      - name: Install Go
        uses: actions/setup-go@v2
        with:
          go-version: "${{ env.golang-version }}"
      - name: Start minikube
        uses: medyagh/setup-minikube@master
      - name: Try the cluster !
        run: kubectl get pods -A
      - name: Build image
        run: |
          export SHELL=/bin/bash
          eval $(minikube -p minikube docker-env)
      #     make docker-build
      # - name: Deploy to minikube
      #   run: |
      #     make deploy
      #     echo ${{ secrets.MONDOO_CLIENT }} > creds.yaml
      #     kubectl create secret generic mondoo-client --namespace mondoo-operator-system --from-file=config=creds.yaml
      #     kubectl apply -f config/samples/k8s_v1alpha1_mondooauditconfig.yaml
      # - name: Verify a Kubernetes Application
      #   run: |
      #     kubectl wait --for=condition=Ready pod -l control-plane=controller-manager --namespace mondoo-operator-system 
      #     kubectl wait --for=condition=Ready pod -l mondoo_cr=mondoo-client --namespace mondoo-operator-system --timeout=300s
      #     curl -sSL http://mondoo.io/download.sh | bash
      #     mv mondoo /usr/local/bin/ 
      #     make test/deployment
      #     make undeploy
      # - name: Install Helm
      #   uses: azure/setup-helm@v1
      #   with:
      #     version: 'v3.8.0' # default is latest stable
      #   id: install
      # - name: Install Helm chart
      #   run: |
      #     echo ${{ secrets.MONDOO_CLIENT }} > creds.yaml
      #     kubectl create namespace mondoo-operator-system
      #     kubectl create secret generic mondoo-client --namespace mondoo-operator-system --from-file=config=creds.yaml
      #     export VERSION=sha256-$(git rev-parse HEAD).sig
      #     helm install mondoo-operator ./charts --namespace mondoo-operator-system --set controllerManager.manager.image.tag=$VERSION
      #     kubectl apply -f config/samples/k8s_v1alpha1_mondooauditconfig.yaml
      # - name: Verify a Kubernetes Application
      #   run: |
      #     kubectl wait --for=condition=Ready pod -l control-plane=controller-manager --namespace mondoo-operator-system 
      #     kubectl wait --for=condition=Ready pod -l mondoo_cr=mondoo-client --namespace mondoo-operator-system --timeout=300s
      #     curl -sSL http://mondoo.io/download.sh | bash
      #     mv mondoo /usr/local/bin/ 
      #     make test/deployment
      #     helm uninstall mondoo-operator  --namespace mondoo-operator-system 
      - name: Install operator-sdk and olm
        run: |
          export ARCH=$(case $(uname -m) in x86_64) echo -n amd64 ;; aarch64) echo -n arm64 ;; *) echo -n $(uname -m) ;; esac)
          export OS=$(uname | awk '{print tolower($0)}')
          export OPERATOR_SDK_DL_URL=https://github.com/operator-framework/operator-sdk/releases/download/v1.17.0
          curl -LO ${OPERATOR_SDK_DL_URL}/operator-sdk_${OS}_${ARCH}
          gpg --keyserver keyserver.ubuntu.com --recv-keys 052996E2A20B5C7E
          curl -LO ${OPERATOR_SDK_DL_URL}/checksums.txt
          curl -LO ${OPERATOR_SDK_DL_URL}/checksums.txt.asc
          gpg -u "Operator SDK (release) <cncf-operator-sdk@cncf.io>" --verify checksums.txt.asc
          grep operator-sdk_${OS}_${ARCH} checksums.txt | sha256sum -c -
          chmod +x operator-sdk_${OS}_${ARCH} && sudo mv operator-sdk_${OS}_${ARCH} /usr/local/bin/operator-sdk
          operator-sdk olm install
          docker run -d -p 5000:5000 --restart=always --name registry registry:2
      - name: Make bundle  
        run: |
          make docker-build docker-push IMG="localhost:5000/mondoohq/mondoo-operator:v0.0.1"
          make bundle IMG="localhost:5000/mondoohq/mondoo-operator:v0.0.1"
          make bundle-build bundle-push BUNDLE_IMG="localhost:5000/mondoohq/mondoo-operator-bundle:v0.0.1"
      - name: Run bundle with olm
          operator-sdk run bundle localhost:5000/mondoohq/mondoo-operator-bundle:v0.0.1 --skip-tls
          make test/deployment
          operator-sdk cleanup mondoo-operator 
          operator-sdk olm uninstall 

  # Added to summarize the matrix and allow easy branch protection rules setup
  e2e-tests-result:
    name: End-to-End Test Results
    if: always()
    needs:
      - e2e-tests
    runs-on: ubuntu-latest
    steps:
      - name: Mark the job as a success
        if: needs.e2e-tests.result == 'success'
        run: exit 0
      - name: Mark the job as a failure
        if: needs.e2e-tests.result != 'success'
        run: exit 1
