name: Tests
on:
  pull_request:
  push:
    paths-ignore:
      - 'docs/**'
    branches:
      - "main"
    tags: ["v*.*.*"]

jobs:
  unit-tests:
    runs-on: ubuntu-latest
    name: Unit tests
    steps:
      - uses: actions/checkout@v2
      - name: Import environment variables from file
        run: cat ".github/env" >> $GITHUB_ENV
      - uses: actions/setup-go@v2
        with:
          go-version: "${{ env.golang-version }}"
      
      # Get values for cache paths to be used in later steps
      - id: go-cache-paths
        run: |
          echo "::set-output name=go-build::$(go env GOCACHE)" 
          echo "::set-output name=go-mod::$(go env GOMODCACHE)"

      # Cache go build cache, used to speedup go test
      - name: Go Build Cache
        uses: actions/cache@v2
        with:
          path: ${{ steps.go-cache-paths.outputs.go-build }}
          key: ${{ runner.os }}-go-build-${{ hashFiles('**/go.sum') }}

      # Cache go mod cache, used to speedup builds
      - name: Go Mod Cache
        uses: actions/cache@v2
        with:
          path: ${{ steps.go-cache-paths.outputs.go-mod }}
          key: ${{ runner.os }}-go-mod-${{ hashFiles('**/go.sum') }}

      - run: make test/ci
      - uses: actions/upload-artifact@v3  # upload test results
        if: success() || failure()        # run this step even if previous step failed
        with:
          name: unit-test-results
          path: unit-tests.xml
  integration-tests:
    runs-on: ubuntu-latest
    needs: [unit-tests]
    if: needs.unit-tests.result == 'success' # run only if unit-tests are successful
    name: Integration tests

    strategy:
      matrix:
        k8s-version: [v1.22.12, v1.23.9, v1.24.3]

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0 # fetch is nneded for "git tag --list" in the Makefile
      - name: Import environment variables from file
        run: cat ".github/env" >> $GITHUB_ENV
      - name: Start minikube
        uses: medyagh/setup-minikube@master
        with:
          memory: 4000m
          kubernetes-version: ${{ matrix.k8s-version }}
      - uses: actions/setup-go@v2
        with:
          go-version: "${{ env.golang-version }}"

      - name: Store creds
        run: |
          echo ${{ secrets.MONDOO_CLIENT }} | base64 -d > creds.json

      - name: Pre-pull container images
        run: minikube image load docker.io/mondoo/client:latest

      # Now that dependencies are cached the tests start almost immediately after minikube has started
      # this makes tests fail occasionally. This sleep gives the runner some time to become more stable
      # before the test execution starts.
      - name: Wait a bit for the runner to become more stable
        run: kubectl -n kube-system wait --for=condition=Ready pods --all --timeout=60s

      - name: Run integration tests
        run: make test/integration/ci

      - uses: actions/download-artifact@v3 # download the unit test results
        if: success() || failure()        # run this step even if previous step failed
        with:
          name: unit-test-results
      - run: mv integration-tests.xml integration-tests-${{ matrix.k8s-version }}.xml
        if: success() || failure()
      - uses: actions/upload-artifact@v3  # upload test results
        if: success() || failure()        # run this step even if previous step failed
        with:                             # upload a combined archive with unit and integration test results
          name: test-results
          path: |
            unit-tests.xml
            integration-tests-${{ matrix.k8s-version }}.xml
      - name: Upload test logs artifact
        uses: actions/upload-artifact@v3
        if: failure()
        with:
          name: test-logs-${{ matrix.k8s-version }}
          path: /home/runner/work/mondoo-operator/mondoo-operator/tests/integration/_output/
